{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAnBPQ,KAAO,CACLC,SAAUC,SAASC,cAAc,yBACjCX,MAAOU,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,yBAGjCH,KAAKC,SAASK,iBAAiB,SAgB/B,SAAiBC,GACfA,EAAIC,iBAOJ,IANA,IAAMC,EAAQC,OAAOV,KAAKR,MAAMmB,OAC1BP,EAAOM,OAAOV,KAAKI,KAAKO,OACxBN,EAASK,OAAOV,KAAKK,OAAOM,OAE9BC,EAAQ,EAEHC,EAAI,EAAGA,EAAIR,EAAQQ,GAAK,EAE/BvB,EAAcuB,EAAI,EADlBD,GAAe,IAANC,EAAUJ,EAAQL,GAExBU,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  startBtn: document.querySelector('button[type=\"submit\"]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.startBtn.addEventListener('click', onClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  let delta = 0;\n\n  for (let i = 0; i < amount; i += 1) {\n    delta += i === 0 ? delay : step;\n    createPromise(i + 1, delta)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","refs","startBtn","document","querySelector","step","amount","addEventListener","evt","preventDefault","delay1","Number","value","delta","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b0871381.js.map"}